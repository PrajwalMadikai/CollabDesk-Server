# Step 5: Deploy to EC2 via SSH
- name: Deploy to EC2
  uses: appleboy/ssh-action@master
  with:
    host: ${{ secrets.EC2_HOST }}
    username: ${{ secrets.EC2_USER }}
    key: ${{ secrets.EC2_SSH_KEY }}
    port: ${{ secrets.EC2_PORT || 22 }}
    script: |
      set -e  # Exit immediately if any command fails

      # Navigate to the app directory or create it if it doesn't exist
      cd /home/${{ secrets.EC2_USER }}/app || mkdir -p /home/${{ secrets.EC2_USER }}/app && cd $_

      # Clone or pull the latest code
      if [ -d ".git" ]; then
        echo "Repository already exists. Pulling latest changes..."
        git pull origin main
      else
        echo "Cloning repository..."
        git clone https://github.com/PrajwalMadikai/CollabDesk-Server.git .
      fi

      # Load the Docker image
      docker load < /home/${{ secrets.EC2_USER }}/app/my-app.tar

      # Stop and remove the existing container (if running)
      CONTAINER_ID=$(docker ps -q --filter "ancestor=my-app:latest")
      if [ ! -z "$CONTAINER_ID" ]; then
        docker stop $CONTAINER_ID
        docker rm $CONTAINER_ID
      fi

      # Run the new container
      docker run -d \
        --name my-app-container \
        -p 8080:80 \
        -e REDIS_HOST=${{ secrets.REDIS_HOST }} \
        -e REDIS_PORT=${{ secrets.REDIS_PORT }} \
        -e MONGO_URI=${{ secrets.MONGO_URI }} \
        my-app:latest

      # Restart Nginx to apply changes
      sudo systemctl restart nginx